{
  "appId": "truecover",
  "configType": "register",
  "id": "taskRegister",
  "configRules": [
  ],
  "fhirResource": {
    "baseResource": {
      "resource": "Task",
      "sortConfigs": [
        {
          "paramName": "period",
          "dataType": "DATE"
        }
      ],
      "dataQueries": [
        {
          "paramName": "status",
          "operation": "OR",
          "filterCriteria": [
            {
              "dataType": "CODE",
              "value": {
                "system": "http://hl7.org/fhir/task-status",
                "code": "completed"
              }
            }
          ]
        }
      ]
    },
    "relatedResources": [
      {
        "id": "availableLocations",
        "resource": "Location",
        "isRevInclude": false,
        "searchParameter": "subject",
        "relatedResources": [
          {
            "id": "availableLists",
            "resource": "List",
            "isRevInclude": true,
            "searchParameter": "subject"
          }
        ]
      }
    ]
  },
  "searchBar": {
    "visible": true,
    "display": "{{ search.by.task.location.name }}",
    "computedRules": [
      "taskName",
      "locationName"
    ]
  },
  "registerCard": {
    "rules": [
      {
        "name": "taskName",
        "condition": "true",
        "actions": [
          "data.put('taskName', fhirPath.extractValue(Task, 'Task.description'))"
        ]
      },
      {
        "name": "taskStatus",
        "condition": "true",
        "actions": [
          "data.put('taskStatus', fhirPath.extractValue(Task, 'Task.status'))"
        ]
      },
      {
        "name": "taskStartDate",
        "condition": "true",
        "actions": [
          "data.put('taskStartDate', fhirPath.extractValue(Task, 'Task.executionPeriod.start'))"
        ]
      },
      {
        "name": "taskServiceStatus",
        "condition": "true",
        "actions": [
          "data.put('taskServiceStatus', service.generateTaskServiceStatus(Task) )"
        ]
      },
      {
        "name": "taskDescription",
        "condition": "true",
        "actions": [
          "data.put('taskDescription', fhirPath.extractValue(Task, 'Task.description'))"
        ]
      },
      {
        "name": "taskId",
        "condition": "true",
        "actions": [
          "data.put('taskId', fhirPath.extractValue(Task, 'Task.id'))"
        ]
      },
      {
        "name": "taskFor",
        "condition": "true",
        "actions": [
          "data.put('taskFor', fhirPath.extractValue(Task, 'Task.for.reference'))"
        ]
      },
      {
        "name": "taskQuestionnaireId",
        "condition": "true",
        "actions": [
          "data.put('taskQuestionnaireId', fhirPath.extractValue(Task, 'Task.reasonReference.reference'))"
        ]
      },
      {
        "name": "locationName",
        "condition": "true",
        "actions": [
          "data.put('locationName', size(availableLocations) > 0 ? fhirPath.extractValue(availableLocations.get(0), \"Location.name\") : '')"
        ]
      },
      {
        "name": "familyLogicalId",
        "condition": "true",
        "actions": [
          "data.put('familyLogicalId', size(availableLists) > 0 ? fhirPath.extractValue(availableLists.get(0), \"List.entry[0].item.reference.split('/')[1]\") : '')"
        ]
      }
    ],
    "views": [
      {
        "viewType": "COLUMN",
        "children": [
          {
            "viewType": "SERVICE_CARD",
            "details": [
              {
                "viewType": "COMPOUND_TEXT",
                "primaryText": "@{locationName}",
                "primaryTextColor": "#000000"
              },
              {
                "viewType": "COMPOUND_TEXT",
                "primaryText": "@{taskName}",
                "primaryTextColor": "#5A5A5A",
                "fontSize": 14.0
              }
            ],
            "showVerticalDivider": false,
            "serviceButton": {
              "visible": true,
              "enabled": true,
              "text": "@{taskStatus}",
              "status": "@{taskServiceStatus}",
              "smallSized": false,
              "actions": [
              ]
            },
            "actions": [
              {
                "trigger": "ON_CLICK",
                "workflow": "LAUNCH_PROFILE",
                "id": "householdProfile",
                "params": [
                  {
                    "paramType": "RESOURCE_ID",
                    "key": "familyLogicalId",
                    "value": "@{familyLogicalId}"
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "topScreenSection": {
    "title": "{{ visited.homes }}",
    "searchBar": {
    },
    "menuIcons": [
      {
        "viewType": "IMAGE",
        "size": 20,
        "imageConfig": {
          "type": "local",
          "reference": "ic_toggle_map_view"
        },
        "actions": [
          {
            "trigger": "ON_CLICK",
            "workflow": "LAUNCH_MAP",
            "id": "locationMap"
          }
        ]
      }
    ]
  }
}